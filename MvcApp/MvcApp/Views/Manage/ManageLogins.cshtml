@using MvcApp.Views.Manage
@model MvcApp.Models.ManageLoginsViewModel
@{
    ViewBag.Title = "外部ログインの管理";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders =Model.ExternalAuthenticationTypes;
    if (!loginProviders.Any()) {
        <div>
            <p>
                構成済みの外部認証サービスはありません。外部サービス経由のログインをサポートするようにこの ASP.NET アプリケーションを設定する方法の
                詳細については、<a href="http://go.microsoft.com/fwlink/?LinkId=313242">こちらの記事</a>をご覧ください。
            </p>
        </div>
    }
    else
    {
        var html = Html;
        if (Model.CurrentLogins.Count > 0)
        {
            <h4>登録済みのログイン</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (html.ManageRemoveLoginForm())
                                    {
                                        @html.AntiForgeryToken()
                                        <div>
                                            @html.Hidden("loginProvider", account.LoginProvider)
                                            @html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default" value="削除" title="この @account.LoginProvider ログインをアカウントから削除します" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            using (html.ManageLinkLoginForm())
            {
                @html.AntiForgeryToken()
                <div id="socialLoginList">
                <p>
                    @foreach (var p in Model.OtherLogins)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="@p.Caption アカウントを使用してログイン">@p.AuthenticationType</button>
                    }
                </p>
                </div>
            }
        }
    }
}
